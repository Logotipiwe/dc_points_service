name: Deploy
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  workflow_call:
    outputs:
      dockerBuild:
        description: Docker build image
        value: ${{ jobs.deploy.outputs.dockerBuild }}
      deployMsg:
        description: Output of docker up command
        value: ${{ jobs.deploy.outputs.deployMsg }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      dockerBuild: ${{ steps.build_push.outputs.dockerBuild }}
      deployMsg: ${{ steps.deploy.outputs.deployMsg }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: Logotipiwe/dc_vars
        token: ${{secrets.PAT}}
    - name: load-env
      uses: duskmoon314/action-load-env@v1.1.0

    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_PAT }}
    - name: Build
      id: build_push
      run: |
        ls
        export IMAGE=${{ env.DOCKER_USER }}/points-service:$(date +%s)
        docker build . -t ${IMAGE}
        docker push ${IMAGE}
        echo "IMAGE=${IMAGE}" >> "$GITHUB_ENV"
        echo "::set-output name=dockerBuild::${IMAGE}"
    - name: Upload
      uses: garygrossgarten/github-action-scp@release
      with:
        local: ./deploy
        concurrency: 20
        remote: /kuber/points-service
        host: ${{ env.DC_HOST }}
        username: ${{ env.SSH_USER }}
        password: ${{ env.SSH_PASSWORD }}
    - name: Deploy
      id: deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.DC_HOST }}
        username: ${{ env.SSH_USER }}
        password: ${{ env.SSH_PASSWORD }}
        port: 22
        script: |
          export IMAGE=${{ env.IMAGE }}
          export M_TOKEN=${{ env.M_TOKEN }}
          
          docker-compose -f /kuber/points-service/points-service.yml down --remove-orphans
          MSG=$(docker-compose -f /kuber/points-service/points-service.yml up -d 2>&1 | tee /dev/tty)
          echo "::set-output name=deployMsg::${MSG}"